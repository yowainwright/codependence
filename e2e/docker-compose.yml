services:
  # Automated test runner
  test:
    build:
      context: ..
      dockerfile: e2e/Dockerfile
      target: test
    volumes:
      - test-results:/test/results
    environment:
      - NODE_ENV=test

  # Interactive development environment
  dev:
    build:
      context: ..
      dockerfile: e2e/Dockerfile
      target: test
    volumes:
      - ..:/app:ro
      - dev-workspace:/workspace
    working_dir: /workspace
    environment:
      - NODE_ENV=development
    entrypoint: ["/bin/sh"]
    stdin_open: true
    tty: true
    command: |
      -c "
      echo 'Setting up development environment...'
      cp -r /app/dist /app/package.json ./
      cp /test/test-package.json /test/minimal-package.json /test/invalid-package.json ./
      echo 'Ready! You can now test codependence init commands.'
      echo 'Available test files:'
      echo '  - test-package.json (with dependencies)'
      echo '  - minimal-package.json (no dependencies)'
      echo '  - invalid-package.json (malformed JSON)'
      echo ''
      echo 'Example commands:'
      echo '  cp test-package.json package.json && node dist/index.js init'
      echo '  cp test-package.json package.json && node dist/index.js init rc'
      echo '  cp test-package.json package.json && node dist/index.js init package'
      /bin/sh
      "

  # Builder for development
  builder:
    build:
      context: ..
      dockerfile: e2e/Dockerfile
      target: builder
    volumes:
      - ..:/app
      - /app/node_modules
    working_dir: /app
    command: pnpm run build
    environment:
      - NODE_ENV=development

volumes:
  test-results:
  dev-workspace:
